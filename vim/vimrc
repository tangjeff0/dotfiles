" notes
  " git@github.com:tangsauce/full-stack-starter-pack.git
  " gD
  " :scriptnames
  " create tags
    " vanilla vim settings
    " keymappings
    " autocommands
    " vundle
    " plugins

"""""""""" VANILLA VIM SETTINGS
filetype plugin indent on
syntax enable
set nocp
set shellpipe=>
set dir=~/.vim/swap
set undofile
set undodir=~/.vim/undodir
set tabstop=2 shiftwidth=2
set softtabstop=0 expandtab
set backspace=indent,eol,start
set showmatch
" set mps+=<:>
set number relativenumber
set autoindent
set smartindent
set complete+=k
set cc=80
set so=10
set timeout timeoutlen=3000 ttimeoutlen=100

"""""""""""" KEYMAPPINGS native
set pastetoggle=<F1>
nnoremap <F2> :NERDTreeMirror<CR>
nnoremap <F3> :CtrlPClearCache<CR>
nnoremap <F4> :UndotreeToggle<CR>
nnoremap <F9> :TagbarToggle<CR>
nnoremap <S-y> y$
imap cll console.log()<Esc>$F(a
vmap cll yocll<Esc>p
nmap cll yiwocll<Esc>p

" Go to tab by number
let mapleader= " "
noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>9 9gt
noremap <leader>9 9gt
nnoremap <leader>p :tabprevious<CR>
nnoremap <leader>n :tabnext<CR>

nnoremap <leader>r :source ~/.vim/vimrc<CR>
nnoremap <leader>b :ls<CR>:b<Space>
map <leader>c "+y
nnoremap <leader>2 :set tabstop=2 shiftwidth=2<CR>
nnoremap <leader>4 :set tabstop=4 shiftwidth=4<CR>
" nnoremap <silent>t :TagbarToggle<CR>
" map <leader>m :vert term ../bin/matlab -nodesktop -nosplash<CR>
" map <leader>q <C-w>:quit!

augroup numbertoggle
  autocmd!
  autocmd BufEnter,InsertLeave,FocusGained * set relativenumber
  autocmd BufLeave,InsertEnter,FocusLost   * set norelativenumber
  autocmd BufEnter,FocusGained */doc/*.txt set nonumber norelativenumber
augroup END

autocmd User GoyoEnter set nonumber norelativenumber
autocmd User GoyoEnter Limelight
autocmd User GoyoLeave set number relativenumber
autocmd User GoyoLeave Limelight!

augroup remember_folds
  autocmd!
  autocmd BufWinLeave *.*,*rc mkview
  autocmd BufWinEnter *.*,*rc silent! loadview
augroup END
set viewoptions-=options

augroup PyToggle
  autocmd!
  autocmd FileType python PymodeLintToggle
  autocmd FileType python set tabstop=4 shiftwidth=4
augroup END

augroup markdownSettings
  autocmd!
  autocmd FileType markdown setlocal spell
  autocmd BufRead,BufNewFile */vim-anywhere/* setlocal spell
augroup END

augroup commentary
  autocmd!
  autocmd FileType javascript setlocal commentstring=/*\ %s\ */
augroup end


"""""""""""" KEYMAPPINGS mac
" nnoremap âˆ« :ls<CR>:b<Space>
" map Ã§ :w !pbcopy<CR><CR>
" nnoremap Â® :source ~/.vim/vimrc<CR>
" nnoremap â€œ :tabp<CR>
" nnoremap â€˜ :tabn<CR>
" map â„¢ :set tabstop=2 shiftwidth=2<CR>
" map Â¢ :set tabstop=4 shiftwidth=4<CR>
" nnoremap <silent>â€  :TagbarToggle<CR>

"""""""""""" KEYMAPPINGS ubuntu
" nnoremap r :source ~/.vim/vimrc<CR>
" nnoremap b :ls<CR>:b<Space>
" map c "+y
" nnoremap o :tabp<CR>
" nnoremap p :tabn<CR><CR>
" map 2 :set tabstop=2 shiftwidth=2<CR>
" map 4 :set tabstop=4 shiftwidth=4<CR>
" nnoremap <silent>t :TagbarToggle<CR>
" map m :vert term ../bin/matlab -nodesktop -nosplash<CR>
" map q <C-w>:quit!

"""""""""" PLUGINS
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'tpope/vim-vinegar'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-surround'
Plugin 'Raimondi/delimitMate'
Plugin 'benjifisher/matchit.zip'
Plugin 'majutsushi/tagbar'
Plugin 'itchyny/lightline.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'w0rp/ale'
Plugin 'mattn/emmet-vim'
" Plugin 'pangloss/vim-javascript'
Plugin 'othree/yajs.vim'
Plugin 'mxw/vim-jsx'
Plugin 'mbbill/undotree'
Plugin 'tangsauce/tmux-resize.vim'
Plugin 'reedes/vim-pencil'
Plugin 'suan/vim-instant-markdown'
Plugin 'junegunn/goyo.vim'
Plugin 'junegunn/limelight.vim'
Plugin 'ervandew/supertab'
Plugin 'SirVer/ultisnips'
Plugin 'honza/vim-snippets'
Plugin 'godlygeek/csapprox'
Plugin 'rizzatti/dash.vim'
Plugin 'junegunn/seoul256.vim' " colors
Plugin 'marciomazza/vim-brogrammer-theme'
Plugin 'mileszs/ack.vim'
Plugin 'python-mode/python-mode'


call vundle#end()            " required
filetype plugin indent on    " required

set t_Co=256
nnoremap l :colo seoul256-light<CR>
nnoremap d :colo seoul256<CR>
" colo seoul256-light
colo seoul256
" colo brogrammer

let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'fugitive#head',
      \   'filename': 'FilenameForLightline'
      \ },
      \ }
function! FilenameForLightline()
    return expand('%')
endfunction
let g:lightline.colorscheme = 'solarized'
" let g:lightline.colorscheme = 'OldHope'
" let g:lightline.colorscheme = 'seoul256'
" dark
" let g:lightline.colorscheme = 'materia'
" let g:lightline.colorscheme = 'molokai'
" let g:lightline.colorscheme = 'darcula'
" other status bar stuff
set laststatus=2
set noshowmode

" Vinegar/Netrw
let g:netrw_liststyle=3

" NERDTree
let g:NERDTreeWinPos = "left"
let g:NERDTreeMapOpenSplit = "s"
let g:NERDTreeMapOpenVSplit = "v"
map <C-n> :NERDTreeToggle<CR>

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_open_new_file = 'h'
nnoremap Ï€ :CtrlPTag<CR>
let g:ctrlp_custom_ignore = {
\ 'dir': 'node_modules',
\ }

" ALE
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ }
" jump to next lint error/warning
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" Tmux-Resize
nnoremap <Left> :call TmuxResize('h', 5)<CR>
nnoremap <Up> :call TmuxResize('k', 5)<CR>
nnoremap <Down> :call TmuxResize('j', 5)<CR>
nnoremap <Right> :call TmuxResize('l', 5)<CR>

let delimitMate_matchpairs = "(:),[:],{:}"
let delimitMate_quotes = "\" ' `"

let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsListSnippets="<c-l>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-k>"
let g:UltiSnipsEditSplit='vertical'
let g:UltiSnipsSnippetDirectories=[$HOME.'/.vim/UltiSnips', $HOME.'/.vim/bundle/vim-snippets/UltiSnips']
" let g:snips_author

let g:jsx_ext_required=0
autocmd FileType jsx let b:match_words = '<\(\w\w*\):</\1,{:}'
packadd! matchit
