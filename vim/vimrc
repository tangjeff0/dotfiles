" notes
  " g; g, to move between jumps
  " "*y to copy to Mac clipboard


"""""""""" VANILLA VIM SETTINGS
filetype plugin on 
set nocp
set shellpipe=>
set number
set dir=~/.vim/swap
set undofile
set undodir=~/.vim/undodir
set tabstop=2 softtabstop=0 expandtab shiftwidth=2
set tabstop=4 softtabstop=0 expandtab shiftwidth=4
set autoindent
set showmatch
set mps+=<:>

" remember folds
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview 
set viewoptions-=options

"""""""""""" KEYMAPPINGS
" remap Y so similar to D or C
nnoremap <S-y> y$

" MacOS `option` keymappings
" ∫ ~ b - opens buffer list
" ® ~ r - source vimrc
" “ and ‘ ~ [ and ] - cycle thru tabpages - gT and gt
nnoremap ∫ :ls<CR>:b<Space>
nnoremap ® :source ~/.vim/vimrc<CR>
nnoremap ‘ :tabn<CR>
nnoremap “ :tabp<CR>

" fn
set pastetoggle=<F1>
nnoremap <F2> :NERDTreeMirror<CR>
nnoremap <F3> :CtrlPClearCache<CR>
nnoremap <F4> :UndotreeToggle<CR>

" one language to rule them all
imap cll console.log();<Esc>$F(a
vmap cll yocll<Esc>p
nmap cll yiwocll<Esc>p 


""""""""""" PLUGINS
" Pathogen
execute pathogen#infect()

" theme
syntax on
colo seoul256
set background=dark

" Lightline
" show current Git branch
" show entire path for file
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'gitbranch#name',
      \   'filename': 'FilenameForLightline'
      \ },
      \ }
function! FilenameForLightline()
    return expand('%')
endfunction
" other status bar stuff
set laststatus=2
set noshowmode

" VimCompletesMe
set completeopt+=menuone

" NERDTree
let g:NERDTreeWinPos = "left"
let g:NERDTreeMapOpenSplit = "s"
let g:NERDTreeMapOpenVSplit = "v"
map <C-n> :NERDTreeToggle<CR>

" CtrlP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_open_new_file = 'h'
let g:ctrlp_custom_ignore = {
\ 'dir': 'node_modules',
\ }

" ALE
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ }
" jump to next lint error/warning
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" Silver Searcher
" must have ack and ag installed on system i think
let g:ackprg = 'ag --nogroup --nocolor --column'

" Tmux-Resize
nnoremap <Left> :call TmuxResize('h', 5)<CR>
nnoremap <Up> :call TmuxResize('k', 5)<CR>
nnoremap <Down> :call TmuxResize('j', 5)<CR>
nnoremap <Right> :call TmuxResize('l', 5)<CR>
