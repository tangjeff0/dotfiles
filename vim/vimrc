" commands im tryna use
" TODO: better alt-up and tab completion
" :g/pattern/z#.5|echo "=========="
" motions:
  " g; g, to move between jumps
  " "*y to copy to Mac clipboard

" vanilla vim commands
filetype plugin on 
set nocp
set shellpipe=>
set number
set dir=~/.vim/swap
set undofile
set undodir=~/.vim/undodir
set tabstop=2 softtabstop=0 expandtab shiftwidth=2 expandtab
set shiftwidth=4 tabstop=4 softtabstop=0 expandtab
set autoindent
set backspace=indent,eol,start
set showmatch
set mps+=<:>

" remember folds
autocmd BufWinLeave *.* mkview
autocmd BufWinEnter *.* silent loadview 
set viewoptions-=options

" KEYMAPPINGS
" remap Y so similar to D or C
nnoremap <S-y> y$

" javascript king
imap cll console.log();<Esc>$F(a
vmap cll yocll<Esc>p
nmap cll yiwocll<Esc>p 

" fn keymappings
set pastetoggle=<F1>
nnoremap <F2> :NERDTreeMirror<CR>
nnoremap <F3> :CtrlPClearCache<CR>
nnoremap <F4> :UndotreeToggle<CR>

" MacOS `option` keymappings
" b - opens buffer list - equivalent to :b
nnoremap ∫ :ls<CR>:b<Space>
" r - source vimrc
nnoremap ® :source ~/.vim/vimrc<CR>
" [ - previous tabpage - equivalent to gT
nnoremap ‘ :tabn<CR>
" ] - next tabpage - equivalent to gt
nnoremap “ :tabp<CR>

" PLUGINS
" PATHOGEN
execute pathogen#infect()

" LIGHTLINE
" show current Git branch
" show entire path for file
let g:lightline = {
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ]
      \ },
      \ 'component_function': {
      \   'gitbranch': 'gitbranch#name',
      \   'filename': 'FilenameForLightline'
      \ },
      \ }
function! FilenameForLightline()
    return expand('%')
endfunction
" other status bar stuff
set laststatus=2
set noshowmode

" not happy with this completion yet
" VimCompletesMe enter
" inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
" vim-mucomplete
set completeopt+=menuone

" NERDTree
let g:NERDTreeWinPos = "left"
let g:NERDTreeMapOpenSplit = "s"
let g:NERDTreeMapOpenVSplit = "v"
map <C-n> :NERDTreeToggle<CR>

" Theme
syntax on
colo seoul256
set background=dark

" CTRLP
let g:ctrlp_map = '<c-p>'
let g:ctrlp_open_new_file = 'h'
let g:ctrlp_custom_ignore = {
\ 'dir': 'node_modules',
\ }

" ALE
let g:ale_linters = {
\ 'javascript': ['eslint'],
\ }
" jump to next lint error/warning
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" SILVER SEARCHER | ACK | AG
let g:ackprg = 'ag --nogroup --nocolor --column'

" Tmux-like window resizing - the greatest of all time: https://stackoverflow.com/questions/27265490/vim-window-resizing-repetitively#36653470
" Map to buttons
source ~/.vim/tmux-resize.vim
nnoremap <Left> :call TmuxResize('h', 5)<CR>
nnoremap <Up> :call TmuxResize('k', 5)<CR>
nnoremap <Down> :call TmuxResize('j', 5)<CR>
nnoremap <Right> :call TmuxResize('l', 5)<CR>
