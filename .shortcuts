useful command line shortcuts
source: https://github.com/0nn0/terminal-mac-cheatsheet

# Writing
# Ctrl + _ Undo the last command. (Underscore. So it's actually Ctrl +  Shift + minus)

# File Management
pbpaste > [file]Past clipboard contents into file,
  # pbpaste > paste-test.txt

# Search
find [dir] -name [search_pattern] Search for files, e.g. find /Users -name "file.txt"
grep [search_pattern] [file]Search for all lines that contain the pattern, e.g. grep "Tom" file.txt
grep -r [search_pattern] [file]Recursively search for all lines that contain the pattern
grep -v [search_pattern] [file]Search for all lines that do NOT contain the pattern   

# Knowledge
echo $0 # shell knowledge
uname -a # OS knowledge

# Custom terminals
# bash
# write a function to compute the current git branch
parse_git_branch() {
      git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

# if using VM
if [ "$color_prompt" = yes ]; then
    PS1="\[$(tput setaf 6)\]\u@\h: \w\[\e[0;33;49m\] \$(parse_git_branch)\[\e[0;0m\]$ "
else
    PS1="\[$(tput setaf 6)\]\u@\h: \w\[\e[0;33;49m\] \$(parse_git_branch)\[\e[0;0m\]$ "
fi
# otherwise
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

 VIM
:r !ls
zz

# https://en.wikipedia.org/wiki/Man_page
The manual is generally split into eight numbered sections, organized as follows (on Research Unix, BSD, macOS and Linux):
Section	Description
1	General commands
2	System calls
3	Library functions, covering in particular the C standard library
4	Special files (usually devices, those found in /dev) and drivers
5	File formats and conventions
6	Games and screensavers
7	Miscellanea
8	System administration commands and daemons

